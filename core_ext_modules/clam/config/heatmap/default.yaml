# Configuration for generating heatmaps using trained models throught the CLAM framework

debug : true 
# ####### PATHS #########
process_list : /local/data2/iulta54/Data/BTB/patch_extraction_csv_files/BTB_for_hs2p.csv # path to the .csv file with the slide_id and file_path infromation (this is similar to the one used for feature extraction). 
              # This can also be a directory containing WSIs. 
trained_model : /local/data1/iulta54/Code/BTB_DEEP_LEARNING/outputs/2024_05_01_npb_trainings/tumor_category_all_vit_uni_mag_20_ps_224_agg_abmil_none_lr_1E-04_sch_cosine_opt_adamW_bgl_ce_7E-01_cls_True_svm_8_t090624 # path to the folder where the model training outputs are saved (where the .pt files are located along with the hydra_config.yaml file).
fold : 0 # which fold to pick among the ones trained.
output_dir : /local/data1/iulta54/Code/BTB_DEEP_LEARNING/outputs # where to save the results. The information about the model will be used to create a subfolder where the results for each slide_id will be saved (as separate folders).

h5_folder : # (Optional) Folder where the patch coordinates (.h5 files) for the slide_ids in the process_list .csv file are located. If not available, the script will run patching.
feature_folder : # (Optional) Folder where the features (.pt files) for the slide_ids in the process_list .csv file are located. If not available, the script will run feature extraction.

# ####### wsi infromation #########
slide_ext : '.ndpi'

# ####### patch extraction settings (used when the .h5 file for a slide is not available) ######### 
patching_arguments: # see patch extraction default.yaml
  base_magnification : 20 # Specifies the magnification at which the patch_level should be refered to. Eg. patch_base_magnification=20 and patch_level=1, means that the patches are extracted at x20 magnification.
                          # patch_base_magnification=40 and patch_level=2, means that the patches are extracted at x20 magnification (patch_level=1 references to x40 magnification).
  downsample : 1 # downsample level at which to patch refered to the base_magnification.
  custom_downsample : 1 # Only used on the non fp patching version. Custom downscale when native downsample is not available (only tested w/ 2x downscale). This should be 1 or 2.'
  patch_size : 256 # patch size
  overlap : 0.5 # overlap (float). Iis used as a ratio of the patch_size. Here we keep some overlap for better visualization

  seg_params:
    seg_level : -1
    sthresh : 9
    mthresh : 7
    close : 5
    use_otsu : False
    keep_ids : 'none'
    exclude_ids : 'none'

  filter_params:
    a_t : 100
    a_h : 16
    max_n_holes : 8

  vis_params:
    vis_level: -1
    line_thickness: 250

  patch_params :
    use_padding : True
    contour_fn : four_pt

feature_extraction_arguments:
  pre_trained_model_archive : /local/data1/iulta54/Code/BTB_DEEP_LEARNING/pre_trained_feature_extractors

# ###### heatmap settings ######
heatmap_arguments :
  # downsample at which to visualize heatmap (-1 refers to downsample closest to 32x downsample)
  vis_level: 1
  # transparency for overlaying heatmap on background (0: background only, 1: foreground only)
  alpha: 0.3
  # whether to use a blank canvas instead of original slide
  blank_canvas: false
  # whether to also save the original H&E image
  save_orig: true
  # file extension for saving heatmap/original image
  save_ext: jpg
  # whether to calculate percentile scores in reference to the set of non-overlapping patches
  use_ref_scores: true
  # whether to use gaussian blur for further smoothing
  blur: false
  # whether to shift the 4 default corner points for checking if a patch is inside a foreground contour
  use_center_shift: true
  # whether to only compute heatmap for ROI specified by x1, x2, y1, y2
  use_roi: false 
  # whether to calculate heatmap with specified overlap (by default, coarse heatmap without overlap is always calculated)
  calc_heatmap: true
  # whether to binarize attention scores
  binarize: false
  # binarization threshold: (0, 1)
  binary_thresh: -1
  # factor for downscaling the heatmap before final dispaly
  custom_downsample: 1
  cmap: jet

representative_patches_arguments:
  save_samples: true
  name: "topk_high_attention"
  seed: 1
  k: 15 # save top-k patches
  mode: topk